# Form implementation generated from reading ui file 'lesson2.ui'
#
# Created by: PyQt6 UI code generator 6.7.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_lesson2(object):
    def setupUi(self, lesson2):
        lesson2.setObjectName("lesson2")
        lesson2.resize(1030, 500)
        self.centralwidget = QtWidgets.QWidget(parent=lesson2)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 0, 1030, 500))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignTop)
        self.label.setObjectName("label")
        lesson2.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=lesson2)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1030, 21))
        self.menubar.setObjectName("menubar")
        lesson2.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=lesson2)
        self.statusbar.setObjectName("statusbar")
        lesson2.setStatusBar(self.statusbar)

        self.retranslateUi(lesson2)
        QtCore.QMetaObject.connectSlotsByName(lesson2)

    def retranslateUi(self, lesson2):
        _translate = QtCore.QCoreApplication.translate
        lesson2.setWindowTitle(_translate("lesson2", "MainWindow"))
        self.label.setText(_translate("lesson2", "Урок 2: Фильтрация данных с помощью оператора WHERE\n"
"Цель урока: Научиться фильтровать строки с помощью оператора WHERE.\n"
"\n"
"Основной синтаксис запроса:\n"
"SELECT column1, column2 FROM table_name WHERE condition;\n"
"Оператор WHERE позволяет фильтровать данные, чтобы выбрать только те строки, которые соответствуют указанному условию.\n"
"\n"
"Примеры использования оператора WHERE\n"
"Пример 1: Простая фильтрация\n"
"Выбор сотрудников с должностью \"Менеджер\":\n"
"SELECT name, position FROM employees WHERE position = \'Менеджер\';\n"
"\n"
"Пример 2: Фильтрация с несколькими условиями (AND и OR)\n"
"Можно использовать операторы AND и OR, чтобы указать несколько условий.\n"
"\n"
"Пример с AND: выберем сотрудников старше 30 лет с должностью \"Менеджер\":\n"
"SELECT name, age, position FROM employees WHERE age > 30 AND position = \'Менеджер\';\n"
"\n"
"Пример с OR: выберем сотрудников с должностями \"Менеджер\" или \"Директор\":\n"
"SELECT name, position FROM employees WHERE position = \'Менеджер\' OR position = \'Директор\';\n"
"\n"
"Пример 3: Использование оператора IN\n"
"Если нужно проверить несколько возможных значений, используйте IN. Например, выбираем сотрудников с должностями \"Менеджер\" или \"Директор\":\n"
"SELECT name, position FROM employees WHERE position IN (\'Менеджер\', \'Директор\');\n"
"\n"
"Пример 4: Использование BETWEEN для диапазонов\n"
"Когда нужно выбрать значения, попадающие в определённый диапазон, используйте BETWEEN. Например, выбираем сотрудников в возрасте от 25 до 40 лет:\n"
"SELECT name, age FROM employees WHERE age BETWEEN 25 AND 40;"))
